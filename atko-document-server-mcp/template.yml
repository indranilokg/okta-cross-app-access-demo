# AWS SAM template for Atko MCP Document Server
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Atko MCP Document Server - SAM Template

Parameters:
  IdJagAudience:
    Type: String
    Description: ID-JAG audience
    Default: http://localhost:5001
  
  OktaIssuer:
    Type: String
    Description: Okta issuer URL
    Default: https://ijtestcustom.oktapreview.com
  
  JwtSecret:
    Type: String
    Description: JWT secret for token verification
    NoEcho: true
  
  DocumentDatabaseUrl:
    Type: String
    Description: URL of the document database
    Default: https://atkointernaldocumentdb.vercel.app/api

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Environment:
      Variables:
        DOCUMENT_DATABASE_URL: !Ref DocumentDatabaseUrl
        JWT_SECRET: !Ref JwtSecret
        OKTA_ISSUER: !Ref OktaIssuer
        ID_JAG_AUDIENCE: !Ref IdJagAudience

Resources:
  # MCP Server Lambda Function
  McpServerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: lambda.handler
      Events:
        # All endpoints go through the single protected API Gateway
        HealthEvent:
          Type: Api
          Properties:
            Path: /mcp/health
            Method: GET
            RestApiId: !Ref McpApi
        InfoEvent:
          Type: Api
          Properties:
            Path: /mcp/info
            Method: GET
            RestApiId: !Ref McpApi
        ToolsEvent:
          Type: Api
          Properties:
            Path: /mcp/tools
            Method: GET
            RestApiId: !Ref McpApi
        ApiEvent:
          Type: Api
          Properties:
            Path: /mcp/{proxy+}
            Method: ANY
            RestApiId: !Ref McpApi
        ApiRootEvent:
          Type: Api
          Properties:
            Path: /mcp
            Method: ANY
            RestApiId: !Ref McpApi
      Policies:
        - CloudWatchLogsFullAccess

  # Single API Gateway for all endpoints (all protected)
  McpApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: ExternalAuthorizer
        Authorizers:
          ExternalAuthorizer:
            FunctionArn: arn:aws:lambda:us-east-1:339712729220:function:atko-document-server-mcp-aut-McpAuthorizerFunction-cad4TNkqXh9l
            Identity:
              Headers:
                - Authorization

Outputs:
  McpApiUrl:
    Description: URL of the MCP API Gateway (all endpoints protected)
    Value: !Sub "https://${McpApi}.execute-api.${AWS::Region}.amazonaws.com/prod/mcp"
  
  McpServerFunction:
    Description: MCP Server Lambda Function
    Value: !Ref McpServerFunction
